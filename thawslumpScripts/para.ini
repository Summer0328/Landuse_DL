#the parameter file for Image Segmentation and Object Image analysis

##############################################################
###input and output setting

working_root=/home/hlc/Data/eboling/eboling_uav_images/dom

# the image for traing (have the same size of input_ground_truth_image)
input_train_dir=/home/hlc/Data/eboling/eboling_uav_images/dom/EboDOM_deeplabV4_29/top
# input ground truth file (absolute path, a raster from training polygons)
input_label_dir=/home/hlc/Data/eboling/eboling_uav_images/dom/EboDOM_deeplabV4_29/gts_numpy

#inf_images_dir=/home/hlc/Data/2018_IEEE_GRSS_Data_Fusion/2018_Release_Phase1/Lidar_GeoTiff_Rasters/Intensity_8bit_merge
inf_images_dir=/home/hlc/Data/eboling/eboling_uav_images/dom


dem_file = /home/hlc/Data/eboling/DEM/20160728-Large-DSM-NaN.tif

slope_file = /home/hlc/Data/eboling/DEM/20160728-Large-DSM-NaN_slope.tif

flow_accumulation = /home/hlc/Data/eboling/DEM/20160728_watershed_analysis/accumulation.tif

###end input and output setting
##############################################################


##############################################################
## taining parameter
batch_size=6
# experiment name
expr_name=exp_2
# the number of iteration
iteration_num=60000

#base_learning_rate
# Use 0.007 when training on PASCAL augmented training set, train_aug. When
# fine-tuning on PASCAL trainval set, use learning rate=0.0001. (from deeplab train.py)
base_learning_rate=0.007

# For `xception_65`, use atrous_rates = [12, 24, 36] if output_stride = 8, or
# rates = [6, 12, 18] if output_stride = 16. Note one could use different
# atrous_rates/output_stride during training/evaluation. (from deeplab train.py)
output_stride=16
atrous_rates1=6
atrous_rates2=12
atrous_rates3=18

# 1 for export multi scale frozen inference graph, 0 for single-scale
export_multi_scale = 0
# which saved snapshot will be exported to the frozen graph, can be equal to less than iteration_num
export_iteration_num=60000

##############################################################


##############################################################
###pre-processing parameters

#the nodata in output images
dst_nodata = 255

## patch width and height of training images (eg. 480=160+160*2)
train_patch_width = 160
train_patch_height = 160
train_pixel_overlay_x = 160
train_pixel_overlay_y = 160

## patch with, height, and pixel_overlay of inference images (eg. )
#  480=352+2*64 (width)
#  480=352+2*64 (height)
# the expected width of patch (70)
inf_patch_width= 160
# the expected height of patch (70)
inf_patch_height=160
# the overlay of patch in pixel (210)
inf_pixel_overlay_x=160
inf_pixel_overlay_y=160


## patch width and height of network (such as U-net)
#out_patch_width=480
#out_patch_height=480

###end pre-processing parameters
##############################################################


##############################################################
### Post processing and evaluation Parameters

# the minimum area of gully, if any polygon small than minimum_gully_area, it will be removed
minimum_gully_area = 100

# assuming ratio=height/width (suppose height > width), ratio belong to [0,1], if any polygon has ratio greater than
#                     maximum_ratio_width_height, it will be removed
maximum_ratio_width_height = 0.3

# the more narrow, the ratio (=perimeter^2/area) is larger
minimum_ratio_perimeter_area = 40

# keep holes
b_keep_holes=YES

# validation files for evaluation
validation_shape = /home/hlc/Data/eboling/training_validation_data/manually_identify/gt_polygons_digitize_gps_v3.shp

IOU_threshold = 0.4

#end Post processing and evaluation Parameters
##############################################################

##############################################################
### QGIS Parameters Setting linux: /usr    mac: /Applications/QGIS.app/Contents/MacOS

#end QGIS Parameters Setting
##############################################################
