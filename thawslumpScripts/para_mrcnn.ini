#the parameter file for Instance segmentation using Mask Rcnn

##############################################################
###input and output setting

working_root=/home/hlc/Data/Qinghai-Tibet/beiluhe/beiluhe_planet/autoMapping

input_image_path = /home/hlc/Data/Qinghai-Tibet/beiluhe/beiluhe_planet/beiluhe_basin/201805/20180522_035755_3B_AnalyticMS_SR_mosaic_8bit_rgb.tif

input_label_image = /home/hlc/Data/Qinghai-Tibet/beiluhe/thaw_slumps/train_polygons_for_planet_2018_luo_Oct23/raster_class_BLH_train_polygons_2018_v3.tif

# image segment scale, script will resample the original to this resolution (meter)
input_image_rescale = 3.0

training_polygons= /home/hlc/Data/Qinghai-Tibet/beiluhe/thaw_slumps/train_polygons_for_planet_2018_luo_Oct23/BLH_train_polygons_2018_v3.shp


# the sub images for traing (relative path in the current folder)
input_train_dir= subImages
# the sub label images for training (relative path in the current folder)
input_label_dir= subLabels

# the folder containing images for inference
inf_images_dir=/home/hlc/Data/Qinghai-Tibet/beiluhe/beiluhe_planet/beiluhe_basin/201805

## the following for calcuating topography and hydrology information,
## if don't have the file, leave the value as nothing instead remove (or comment)
dem_file = /home/hlc/Data/Qinghai-Tibet/beiluhe/DEM/srtm_30/beiluhe_strm30_prj.tif

slope_file = /home/hlc/Data/Qinghai-Tibet/beiluhe/DEM/srtm_30/beiluhe_strm30_prj_slope.tif

flow_accumulation =

###end input and output setting
##############################################################


##############################################################
## taining parameter of Mask RCNN, batch_size = gpu_count*images_per_gpu
gpu_count = 1
images_per_gpu = 2

# class number (without background), remember to self.add_class("planet", class_id, "class_name") when loading data
NUM_CLASSES_noBG = 2

# for some task, only want to keep one class in the end, then input the class IDs here,
# for mutiple classes, use comma to separate them. if want to keep all the classes, then keep it empty
final_keep_classes = 1

# mask_rcnn, Supported values are: resnet50, resnet101.
BACKBONE = resnet50

# experiment name
expr_name=exp1

# the number of iteration
;iteration_num=30000

#base_learning_rate
# Use 0.007 when training on PASCAL augmented training set, train_aug. When
# fine-tuning on PASCAL trainval set, use learning rate=0.0001. (from deeplab train.py)
;base_learning_rate=0.007

# 1 for export multi scale frozen inference graph, 0 for single-scale
;export_multi_scale = 1
# which saved snapshot will be exported to the frozen graph, can be equal to less than iteration_num
export_iteration_num=0
# batch size for inference
inf_batch_size=1

# data augmentaion
data_augmentation = flip, rotate, blur, crop, scale
# ignore class when perform data augmentation
data_aug_ignore_classes=class_2

##############################################################


##############################################################
###pre-processing parameters
#buffer size for extending the training polygon, in the projection, normally, it is based on meters
buffer_size = 300

#whether use the rectangular extent of the polygon, set "--rectangle" on right if Yes, or omit it if NO
b_use_rectangle = --rectangle

#the nodata in output images
dst_nodata = 255

## patch width and height of training images (eg. 480=160+160*2)
train_patch_width = 160
train_patch_height = 160
train_pixel_overlay_x = 160
train_pixel_overlay_y = 160

## patch with, height, and pixel_overlay of inference images (eg. )
#  480=352+2*64 (width)
#  480=352+2*64 (height)
# the expected width of patch (70)
inf_patch_width= 160
# the expected height of patch (70)
inf_patch_height=160
# the overlay of patch in pixel (210)
inf_pixel_overlay_x=160
inf_pixel_overlay_y=160

## mutiple scale inference (different patch sise), using comma to separate them
muti_inf_patch_width= 160,240, 320, 480
muti_inf_patch_height=160, 240, 320, 480
muti_inf_pixel_overlay_x=160, 120, 80, 20
muti_inf_pixel_overlay_y=160, 120, 80, 20

## IoU threshold for non max suppression (NMS)
nms_iou_threshold = 0.3

## patch width and height of network (such as U-net)
#out_patch_width=480
#out_patch_height=480

# trained model, use the one before overfitting or latest one ('last')
trained_model=exp3/planet20181128T1042/mask_rcnn_planet_0025.h5

###end pre-processing parameters
##############################################################


##############################################################
### Post processing and evaluation Parameters

# the minimum area of gully or other landforms, if any polygon small than minimum_gully_area, it will be removed
minimum_gully_area = 100

# assuming ratio=height/width (suppose height > width), ratio belong to [0,1], if any polygon has ratio greater than
#                     maximum_ratio_width_height, it will be removed
maximum_ratio_width_height = 1.0

# the more narrow, the ratio (=perimeter^2/area) is larger
minimum_ratio_perimeter_area = 0

# keep holes
b_keep_holes=YES

# validation files for evaluation
validation_shape = /home/hlc/Data/Qinghai-Tibet/beiluhe/thaw_slumps/train_polygons_for_planet_2018_luo_Oct23/identified_ThawSlumps_prj.shp

IOU_threshold = 0.5

#end Post processing and evaluation Parameters
##############################################################

##############################################################
### QGIS Parameters Setting linux: /usr    mac: /Applications/QGIS.app/Contents/MacOS

#end QGIS Parameters Setting
##############################################################
